

<% 
    const KILLS = 50;
    const DEATHS = -20;
    const ASSISTS = 20;
    const DOUBLE = 100;
    const TRIPLE = 250;
    const QUADRA = 500;
    const PENTA = 2000;
    const KILLING_SPREE = 25;
    const FIRST_BLOOD_KILL = 300;
    const FIRST_BLOOD_ASSIST = 150;
    
    const OBJECTIVE_DAMAGE = 25; // divide 25  hard to calculate; 
    const TURRET_DAMAGE = 10; // divide 10; 
    const FIRST_TOWER_KILL = 50; 
    const FIRST_TOWER_ASSIST = 50; 
    const FIRST_INHIB_KILL = 100; 
    const FIRST_INHIB_ASSIST = 100; 
    const NEUTRAL_MINIONS = 5;
    const TOTAL_MINIONS = 2; 
  
    const CC_TIME_DEALT = 0.25; 
    const TOTAL_HEAL = 20; // divide by 20; 1.5 multiplier for healer supports 
    const TOTAL_UNITS_HEALED = 50; // 1.5 multiplier for healer supports 
    const TIME_CC_OTHERS = 0.25; 
    const WARDS_PLACED = 25; // 1.5 multiplier for supports 
    const WARDS_KILLED = 50; // 1.5 multiplier for supports 
    const VISION_SCORE = 10; 
    const DAMAGE_TAKEN = 100; // divide 50; 1.5 multiplier for tanks
    
    var kills, deaths, assists, double, triple, quadra, penta, killing_spree, first_blood_kill,
        first_blood_assist, objective_damage, turret_damage, first_tower_kill, first_tower_assist,
        first_inhib_kill, first_inhib_assist, neutral_minions, total_minions, cc_time_dealt,
        total_heal, total_units_healed, time_cc_others, wards_placed, wards_killed, vision_score, damage_taken;
    
    var starScore, teamScore, objectiveScore = 0;
%>

<h1>Here are the Results!</h1>

<% var summonerNamePlayer = dataPlayer["name"] %>
<% var summonerNameOpponent = dataOpponent["name"] %>

<% var accountIdPlayer = dataPlayer["accountId"] %>
<% var accountIdOpponent = dataOpponent["accountId"] %>

<% var summonerIdPlayer = dataPlayer["id"] %>
<% var summonerIdOpponent = dataOpponent["id"] %>

<% var participantIdPlayer = ""; %>
<% var participantIdOpponent = ""; %>
<% var participantPlayer; %>
<% var participantOpponent; %>

<% initPlayerParticipantId(); %>
<% initParticipants(); %>
<% initPlayerScores(); %>

<h2>Summoner #1 Info</h2>
<h3>Name: <%= summonerNamePlayer %></h3>
<h3>Summoner ID: <%= summonerIdPlayer %></h3>
<h3>Account ID: <%= accountIdPlayer %></h3>

<h2>Summoner #2 Info</h2>
<h3>Name: <%= summonerNameOpponent %></h3>
<h3>Summoner ID: <%= summonerIdOpponent %></h3>
<h3>Account ID: <%= accountIdOpponent %></h3>

<h2>Match Info</h2>
<h3>Match ID / Game ID: <%=  %></h3>

<h2>Summoner #1 Stats/Scores</h2>
<h3>Role: <%= participantPlayer["stats"]["role"] %></h3>
<h3>Lane: <%= participantPlayer["stats"]["lane"] %></h3>
<h3>Kills: <%= kills %></h3>
<h3>Deaths: <%= deaths %></h3>
<h3>Assists: <%= assists %></h3>
<h3>Double Kills: <%= double %></h3>
<h3>Triple Kills: <%= triple %></h3>
<h3>Quadra Kills: <%= quadra %></h3>
<h3>Penta Kills: <%= penta %></h3>
<h3>Largest Killing Spree: <%= killing_spree %></h3>
<h3>Total Heal: <%= total_heal %></h3>




<h3>Damage Dealt To Objectives: <%= objective_damage %></h3>
<h3>Damage Dealt To Turrets: <%= turret_damage %></h3>




<h3>Neutral Minions Killed: <%= neutral_minions %></h3>
<h3>Total Minions Killed: <%= total_minions %></h3>

<h3>Total CC Dealt: <%= cc_time_dealt %></h3>
<h3>Total Units Healed: <%= total_units_healed %></h3>
<h3>Time CCing Others: <%= cc_time_dealt %></h3>
<h3>Wards Placed: <%= wards_placed %></h3>
<h3>Wards Killed: <%= wards_killed %></h3>
<h3>Vision Score: <%= vision_score %></h3>
<h3>Total Damage Taken: <%= damage_taken %></h3>

<h3>Star Score: <%= starScore %></h3>
<h3>Objective Score: <%= objectiveScore %></h3>
<h3>Team Score: <%= teamScore %></h3>

    <% function initPlayerParticipantId() { %>
        <% dataMatch["participantIdentities"].forEach(function(entry) { %>
            <% if (entry["player"]["summonerName"] === summonerNamePlayer) { %>
                <% participantIdPlayer = entry["participantId"]; %>
                <% console.log("matched player to " + participantIdPlayer); %>
            <% } %>
            <% if (entry["player"]["summonerName"] === summonerNameOpponent) { %>
                 <% participantIdOpponent = entry["participantId"]; %>
                 <% console.log("matched opponent to " + participantIdOpponent); %>
            <% } %>
        <% }); %>
    <% } %>

 <% function initParticipants() { %>
        <% dataMatch["participants"].forEach(function(entry) { %>
            <% if (entry["participantId"] === participantIdPlayer) { %>
                <% participantPlayer = entry; %>
                <% console.log(participantPlayer); %>
            <% } %>
            <% if (entry["participantId"] === participantIdOpponent) { %>
                <% participantOpponent = entry; %>
                <% console.log(participantOpponent); %>
            <% } %>
        <% }); %>
    <% } %>
    
 <% function initPlayerScores() {
        kills = Number(participantPlayer["stats"]["kills"])*KILLS;
        deaths = Number(participantPlayer["stats"]["deaths"])*DEATHS;
        assists = Number(participantPlayer["stats"]["assists"])*ASSISTS;
        double = Number(participantPlayer["stats"]["doubleKills"])*DOUBLE;
        triple = Number(participantPlayer["stats"]["tripleKills"])*TRIPLE;
        quadra = Number(participantPlayer["stats"]["quadraKills"])*QUADRA;
        penta = Number(participantPlayer["stats"]["pentaKills"])*PENTA;
        killing_spree = Number(participantPlayer["stats"]["largestKillingSpree"])*KILLING_SPREE;
        //first_blood_kill = Number(participantPlayer["stats"]["firstBloodKill"])*FIRST_BLOOD_KILL;
        //first_blood_assist = Number(participantPlayer["stats"]["firstBloodAssist"])*FIRST_BLOOD_ASSIST;
        
        objective_damage = Number(participantPlayer["stats"]["damageDealtToObjectives"])/OBJECTIVE_DAMAGE;
        turret_damage = Number(participantPlayer["stats"]["damageDealtToTurrets"])/TURRET_DAMAGE;
        //first_tower_kill = Number(participantPlayer["stats"]["firstTowerKill"])*FIRST_TOWER_KILL;
        //first_tower_assist = Number(participantPlayer["stats"]["firstBloodAssist"])*FIRST_TOWER_ASSIST;
        //first_inhib_kill = Number(participantPlayer["stats"]["firstInhibitorKill"])*FIRST_INHIB_KILL;
        //first_inhib_assist = Number(participantPlayer["stats"]["firstInhibitorAssist"])*FIRST_TOWER_ASSIST;
        neutral_minions = Number(participantPlayer["stats"]["neutralMinionsKilled"])*NEUTRAL_MINIONS;
        total_minions = Number(participantPlayer["stats"]["totalMinionsKilled"])*TOTAL_MINIONS;
       
        cc_time_dealt = Number(participantPlayer["stats"]["totalTimeCrowdControlDealt"])*CC_TIME_DEALT;
        total_heal = Number(participantPlayer["stats"]["totalHeal"])/TOTAL_HEAL;
        total_units_healed = Number(participantPlayer["stats"]["totalUnitsHealed"])*TOTAL_UNITS_HEALED;
        time_cc_others = Number(participantPlayer["stats"]["timeCCingOthers"])*TIME_CC_OTHERS;
        wards_placed = Number(participantPlayer["stats"]["wardsPlaced"])*WARDS_PLACED;
        wards_killed = Number(participantPlayer["stats"]["wardsKilled"])*WARDS_KILLED;
        vision_score = Number(participantPlayer["stats"]["visionScore"])*VISION_SCORE;
        damage_taken = Number(participantPlayer["stats"]["totalDamageTaken"])/DAMAGE_TAKEN;
        
        starScore = Math.round(kills + deaths + assists + double + triple + quadra + penta + killing_spree + total_heal);
        teamScore = Math.round(cc_time_dealt + total_units_healed + cc_time_dealt + 
                    wards_placed + wards_killed + vision_score + damage_taken);
        objectiveScore = Math.round(objective_damage + turret_damage + neutral_minions + total_minions);
 } %>

